####ggplot2包学习
#推荐书 the grammar of graphics
library(ggplot2)

#qplot
head(diamonds)
options(max.print=99999)

qplot(carat,price,data=diamonds)
qplot(log(carat),log(price),data=diamonds)
qplot(carat,x*y*z,data=diamonds)

#装饰属性
set.seed(1410)
dsmall<- diamonds[sample(nrow(diamonds),100),]
qplot(carat,price,data=dsmall,color=color)
qplot(carat,price,data=dsmall,shape=cut)
qplot(carat,price,data=dsmall,shape=cut,color=color)

qplot(carat,price,data=diamons,alpha=I(1/10)) #alpha 透明度
qplot(carat,price,data=dsmall,geom=c('point','smooth'))  #画点图和曲线图
qplot(carat,price,data=dsmall,geom=c('point','smooth'),span=0.2) #改变项式

qplot(color,price/carat,data=diamonds,geom='boxplot')

qplot(color,price/carat,data=diamonds,geom='jitter')
qplot(carat,data=diamonds,geo,='histogram')#直方图
qplot(carat,data=diamonds,geom='histogram',color=color)

qplot(carat,data=diamonds,geom='histogram',binwidth=1,xlim=c(0,3)) #柱子的粗细
qplot(carat,data=diamonds,geom='histogram',fill=color,color=color)
qplot(carat,data=diamonds,geom='density') #密度曲线
qplot(carat,data=diamonds,geom='density',color=color)
qplot(color,data=diamonds,geom='bar')
qplot(carat,data=diamonds,facets=color~.,geom='histogram')

##gplot
####ggplot概念

head(mpg)
qplot(displ,hwy,data=mpg,color=factor(cyl))
#装饰属性
#点大小 位置 颜色
#第一要素 从数据到装饰属性的映射
#数据 →映射（位置，颜色）
#第二要素 geom 几何对象
#复杂统计图通过图层叠加实现
#scaling 标价 把像素转化为图上可以实现的点
#可以转化为极坐标系和球坐标系
#coord 坐标系
qplot(displ,hwy,data=mpg,facets=.~year)+geom_smooth()#按年份来分组

#一层层画 1基础图层 2装饰属性映射  3统计变换4几何变换 5位置变换
###ggplot
p<- ggplot(diamonds,aes(carat,price,color=cut))
#diamonds 定义数据集,会成为默认数据集, aes表示装饰属性开始了，映射到x（carat），y（price），颜色
summary(p) #查看图形结构

p<- ggplot(diamonds,aes(x=carat))
p<- p+layer(
geom='bar',
stat='bin',
position = "identity",
stat_params=list(binwidth=2))
###
p<- p+
geom_histogram(binwidth=2,fill='steelblue')
p

##几何参数开头 geom_  统计参数开头 stat_

ggplot(msleep,aes(sleep_rem/sleep_total,awake))+geom_point()
####sleep_rem / sleep_total 是x
qplot(sleep_rem/sleep_total,awake,data=msleep)
qplot(sleep_rem/sleep_total,awake,data=msleep)+geom_smooth()

ggplot(msleep,aes(sleep_rem/sleep_total,awake))+geom_point()+
geom_smooth()

p<- ggplot(msleep,aes(sleep_rem/sleep_total,awake))
p<- p+geom_point()+geom_smooth()
summary(p)

######
p<- ggplot(mtcars,aes(mpg,wt,color=cyl))+geom_point()
#数据集 mtcars  mpg是x wt是y 
p+geom_smooth()
###修改数据框的变量
mtcars<- transform(mtcars,mpg=mpg^2)
p%+%mtcars 
#%+%表示将数据更换掉
####新写法
p<- ggplot(mtcars)
p<- p+ aes(wt,hp)

p+geom_point(aes(color=factor(cyl)))
p+geom_point(aes(y=xxxx))
#更换映射
Oxboys
####另一个aes ————group
p<- ggplot(Oxboys,aes(age,height,group=Subject))+geom_line()
p<- ggplot(Oxboys,aes(age,height,group=1))+geom_line()

p<- ggplot(Oxboys,aes(age,height,group=Subject))+geom_line()
p+ geom_smooth(aes(group=Subject),method='lm',se=F)
p+geom_smooth(aes(group=1),method='lm',size=2)
###选择拟合方式
###覆盖缺省分组
boysbox<- ggplot(Oxboys,aes(Occasion,height))+geom_boxplot()
boysbox+geom_line(aes(group=Subject),color='blue')
####画出箱线图，并加线
library(ggplot2)
x<- ggplot(diamonds,aes(clarity,fill=cut))
x+geom_bar(position='stack')+
scale_y_continuous(breaks=seq(0,12000,2000))###修改y轴

x+geom_bar(position='fill')
x+geom_bar(position='dodge') ##fill dodge stack 是三种不同的填充方法
####组合geom 和stat
d<- ggplot(diamonds,aes(carat))+xlim(0,2)
d+stat_bin(aes(ymax=..count..),binwidth=0.1,geom='line')
#ymax=..count.. 计算y最大值点，geom表示画的图的样式
####
d+stat_bin(aes(size=..density..),binwidth=0.1,geom='point',position='identity')
#
d+stat_bin(aes(fill=..count..),binwidth=0.1,geom='tile',position='identity')

##
##整合回归模型
require(nlme,quiet=T,warn.conflicts=F)###安装包？
model<- lme(height~age,data=Oxboys,random=~1+age|Subject)
oplot<- ggplot(Oxboys,aes(age,height,group=Subject)+geom_line()
age.grid<- seq(-1,1,length=10)
subjects<- unique(Oxboys$Subject)
preds<- expand.grid(age=age.grid,Subject=subjects)
preds$height<- predict(model,preds)
oplot+geom_line(data=preds,color='blue',size=0.4)
##对残差进行分析
Oxboys$fitted<- predict(model)
Oxboys$resid<- with(Oxboys,fitted-height)
oplot%+%Oxboys+aes(y=resid)+geom_smooth(aes(group=1))
###
###基本作图类型
library(ggplot2)
df<- data.frame(x=c(3,1,5),y=c(2,4,6),label=c('a','b','c'))
p<- ggplot(df,aes(x,y,label=label))+xlab(NULL)+ylab(NULL)

p+geom_point()+ggtitle('geom_point')
p+geom_bar(stat='identity')+ggtitle('geom_point')
p+geom_line()
p+geom_area()
p+geom_path()#路径图
p+geom_tile() #瓦片图
p+geom_polygon()##多边形
depth.dist<- ggplot(diamonds,aes(depth))+xlim(58,68)
depth.dist+geom_histogram(aes(y=..density..),binwidth=0.1)+facet_grid(cut~.)
##以cut为分组
depth_dist+geom_histogram(aes(fill=cut),binwidth=0.1,position='fill')
depth.dist+geom_freqpoly(aes(u=..density..,color=cut),binwidth=0.2)
###
#####overplotting 重合值
df<- data.frame(x=rnorm(2000),y=rnorm(2000))
norm<- ggplot(df,aes(x,y))
norm+geom_point()
norm+geom_point(shape=1)#将点变成空心
norm+geom_point(shape='.')
##改变透明度
norm+geom_point(color='black',alpha=1/3)
norm+geom_point(color='black',alpha=1/5)
norm+geom_point(color='black',alpha=1/10)
#####扰动表示法
td<- ggplot(diamonds,aes(table,depth))+xlim(50,70)+ylim(50,70)
td+geom_point()
td+geom_jitter()
td+geom_jitter(position='jitter',color='blue',alpha=1/3)

##地图
library(maps)
data(us.cities)
big_cities<- subset(us.cities,pop>500000)
qplot(long,lat,data=big_cities)+borders('state',size=0.5)
####德克萨斯
tx_cities<- subset(us.cities,country.etc=='TX')
ggplot(tx_cities,aes(long,lat))+borders('county','texas',color='gray70')
geom_point(color='black',alpha=0.5)

states<- map_data('state')
arrests<- USArrests
names(arrests)<- tolower(names(arrests))
arrests$region
choro<- merge(states,arrests,by='region')
choro<- choro[order(choro$order),]
qplot(long,lat,data=choro,group=group,fill=assault,geom='ploygon')
qplot(long,lat,data=choro,group=group,fill=assault/murder,geom='pollygon')

#####标记
unemp<- qplot(date,unemploy,data=economics,geom='line',xlab="",ylab="norsd")
####geom_yline 加一个水平线
#geom_abline 加一条竖线
#geom_rect 可以加一个矩形
###
###分组
#facet_grid 或者 face_wrap
mpg2<- subset(mpg,cyl!=5,&dry%in%c('4','f')) 
qplot(cty,hwy,data=mpg2)+facet_grid(.~cyl)
qplot(ctydata=mpg2,geom='histogram',binwidth=2)+facet_grid(cyl~.)
###.~cyl  和 cyl~. 改变了分组方式

#######
#########第四周 scales themes
 ##scales 实际的映射
##themes 主题
##scales  从数据空间到装饰空间的一个函数
#domain 数据空间  range装饰空间 可以是离散或者连续的
#第一个过程 不一定要做transformation 只对连续的情形  做变换
#第二个过程 training 学习数据情况，决定一个最佳的描绘方式
#第三个过程 mapping 映射具体数据

#scale_x_xxxxxx 例如 scale_x_discrete() 决定x轴是否是连续的
plot<- qplot(cty,hwy,data=mpg)
plot+aes(x=drv)
plot+aes(x=drv)+scale_x_discrete()
####scale_color_hue   scale_color_vrewer()
p<- qplot(sleep_total,sleep_cycle,data=msleep,color=vore)
p
p+scale_color_hue("what does \nit eat?",breaks=c('herbi','carni','omni',NA),
labels=c('plants','meat','both',"don't know"))
##相当于自定义标签内容
p+scale_colour_brewer(palette = "Set1")

####xlab ylab labs
p<- qplot(cty,hwy,data=mpg,color=displ)
p+scale_x_continuous('city mpg')  #把横坐标变成连续函数
p+xlab('city map')
p+ylab('higthway mag')
p+ labs(x='city mpg',y='highway',color='Dispplacement') ##改动行列标题
###
p<- qplot(cyl,wt,data=mtcars)

p+scale_x_continuous(breaks=c(5.5,6.5))
p+scale_x_continuous(limits=c(5.5,6.5))##定义x轴刻度
p<- qplot(wt,cyl,data=mtcars,color=cyl)
p
p+scale_color_gradient(breaks=(5.5,6.5))###将颜色仅分为两个类别
p+scale_color_gradient(limits=(5.5,6.5))
####scale_x_log10()

qplot(log10(carat),log10(price),data=diamonds)
qplot(carat,price,data=diamonds)+scale_x_log10()+scale_y_log10() #仍以原来的值表示

plot<- qplot(date,psavert,data=economics,geom='line')+ylab('personas savings rate')+
geom_hline(xintercept=0,color='grey50')
plot
plot+scale_x_date(major='10 years')
##可以改变时间刻度scale_x_date
####
####theme
hgram<- qplot(rating,data=movies,vinwidth=1)
previous_theme<- theme.set(theme_bw())#更换主题

#http://bbs.pinggu.org/thread-4232954-1-1.html 四种散点图矩阵绘图方式
